package com.sprint.integration.eai.services.querydeviceinfoservice.v1.querydeviceinfoservice_wsdl;

import java.io.File;
import java.io.IOException;
import java.net.URL;
import javax.xml.namespace.QName;
import javax.xml.ws.WebEndpoint;
import javax.xml.ws.WebServiceClient;
import javax.xml.ws.WebServiceFeature;
import javax.xml.ws.Service;

/**
 * This class was generated by Apache CXF 3.1.7
 * 2018-05-22T13:16:43.056+05:30
 * Generated source version: 3.1.7
 * 
 */
@WebServiceClient(name = "QueryDeviceInfoService", 
                  wsdlLocation = "#{@queryDeviceInfoServiceWsdlLocationPropertyValue}",
                  targetNamespace = "http://integration.sprint.com/eai/services/QueryDeviceInfoService/v1/QueryDeviceInfoService.wsdl") 
public class QueryDeviceInfoService extends Service {
	private static String queryDeviceInfoServiceWsdlLocation;
	public final static URL WSDL_LOCATION;
    public final static QName SERVICE = new QName("http://integration.sprint.com/eai/services/QueryDeviceInfoService/v1/QueryDeviceInfoService.wsdl", "QueryDeviceInfoService");
    public final static QName QueryDeviceInfoPortType = new QName("http://integration.sprint.com/eai/services/QueryDeviceInfoService/v1/QueryDeviceInfoService.wsdl", "QueryDeviceInfoPortType");
    static {
        URL url = null;
        try {
        	queryDeviceInfoServiceWsdlLocation = new File(".").getCanonicalPath()+"\\src\\main\\resources\\wsdl\\queryDeviceInfoService.wsdl";
            url = new URL("file:"+queryDeviceInfoServiceWsdlLocation);
        } catch (IOException e) {
            java.util.logging.Logger.getLogger(QueryDeviceInfoService.class.getName())
                .log(java.util.logging.Level.INFO, 
                     "Can not initialize the default wsdl from {0}", queryDeviceInfoServiceWsdlLocation);
        }
        WSDL_LOCATION = url;
    }

    public QueryDeviceInfoService(URL wsdlLocation) {
        super(wsdlLocation, SERVICE);
    }

    public QueryDeviceInfoService(URL wsdlLocation, QName serviceName) {
        super(wsdlLocation, serviceName);
    }

    public QueryDeviceInfoService() {
        super(WSDL_LOCATION, SERVICE);
    }
    
    public QueryDeviceInfoService(WebServiceFeature ... features) {
        super(WSDL_LOCATION, SERVICE, features);
    }

    public QueryDeviceInfoService(URL wsdlLocation, WebServiceFeature ... features) {
        super(wsdlLocation, SERVICE, features);
    }

    public QueryDeviceInfoService(URL wsdlLocation, QName serviceName, WebServiceFeature ... features) {
        super(wsdlLocation, serviceName, features);
    }    




    /**
     *
     * @return
     *     returns QueryDeviceInfoPortType
     */
    @WebEndpoint(name = "QueryDeviceInfoPortType")
    public QueryDeviceInfoPortType getQueryDeviceInfoPortType() {
        return super.getPort(QueryDeviceInfoPortType, QueryDeviceInfoPortType.class);
    }

    /**
     * 
     * @param features
     *     A list of {@link javax.xml.ws.WebServiceFeature} to configure on the proxy.  Supported features not in the <code>features</code> parameter will have their default values.
     * @return
     *     returns QueryDeviceInfoPortType
     */
    @WebEndpoint(name = "QueryDeviceInfoPortType")
    public QueryDeviceInfoPortType getQueryDeviceInfoPortType(WebServiceFeature... features) {
        return super.getPort(QueryDeviceInfoPortType, QueryDeviceInfoPortType.class, features);
    }

}
